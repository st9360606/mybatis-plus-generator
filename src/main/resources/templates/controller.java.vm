package ${package.Controller};

import org.apache.ibatis.annotations.Update;
import org.springframework.web.bind.annotation.*;
import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
import java.util.List;

import com.baomidou.mybatisplus.extension.plugins.pagination.Page;

import javax.annotation.Resource;

import org.springframework.web.bind.annotation.RequestMapping;

import ${package.Service}.${table.serviceName};
import ${package.Entity}.${entity};

#if(${restControllerStyle})
import org.springframework.web.bind.annotation.RestController;
#else
import org.springframework.stereotype.Controller;
#end
#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end

/**
 * <p>
 * $!{table.comment} 前端控制器
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
#if(${restControllerStyle})
@RestController
#else
@Controller
#end
@RequestMapping("#if(${package.ModuleName})/${package.ModuleName}#end/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end")
#if(${kotlin})
class ${table.controllerName}#if(${superControllerClass}) : ${superControllerClass}()#end

#else
    #if(${superControllerClass})
    public class ${table.controllerName} extends ${superControllerClass} {
    #else
    public class ${table.controllerName} {
    #end

@Resource
private ${table.serviceName} ${table.entityPath}Service;

        //新增或者更新
        @PostMapping("/saveOrUpdate")
        public boolean save(@RequestBody ${entity} ${table.entityPath}){
                return ${table.entityPath}Service.saveOrUpdate(${table.entityPath});
        }

        //删除单个
        @DeleteMapping("/del/{id}")
        public boolean delete(@PathVariable Integer id){
                return ${table.entityPath}Service.removeById(id);
        }

        //批量删除
        @DeleteMapping("/dels/{ids}")
        public boolean delete(@PathVariable List<${entity}> ids){
                return ${table.entityPath}Service.removeByIds(ids);
        }

        //修改
        @PostMapping("/update")
        public boolean update(@RequestBody ${entity} ${table.entityPath}){
                return ${table.entityPath}Service.update(${table.entityPath},null);
        }

        //查找全部
        @GetMapping("/findAll")
        public List<${entity}> findAll(){
                return ${table.entityPath}Service.list();
        }

        //单个查找
        @GetMapping("/findOne")
        public ${entity} findOne(@PathVariable Integer id){
                return ${table.entityPath}Service.getById(id);
        }

        //分页
        @GetMapping("/page")
        public Page<${entity}> findPage(@RequestParam Integer pageNum,
        @RequestParam Integer pageSize){
                QueryWrapper<${entity}> queryWrapper=new QueryWrapper<>();
                return ${table.entityPath}Service.page(new Page<>(pageNum,pageSize),queryWrapper);
        }
}
#end
